# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ develop , main ]
  pull_request:
    branches: [ develop , main]

jobs:
  build:
    runs-on: ubuntu-latest
    env : 
      token_id : 5ce4a89d-4d60-4248-ba8f-457f18cc2156
      organization : WEBINAR
      swaggerhub_host : api.swaggerhub.com
      
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name : Extract version
      id: vars
      run: |
         echo ::set-output name=version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
    - name: Swaggerresponse
      run: echo ${{ steps.vars.outputs.version }} 
      
    - name : Extract project name
      id: name
      run: |
         echo ::set-output name=version::$(mvn help:evaluate -Dexpression=project.name -q -DforceStdout)
    - name: Swaggerresponse
      run: echo ${{ steps.name.outputs.version }} 
      

     ### To Update/Create version if any changes happens in Dev Branch ###

    - name: Build with Maven
      run: mvn -B package --file pom.xml -Dswagger.org=${{env.organization}} -Dswagger.token=${{env.token_id}}
  
     
     ### #To Publish the version if changes are Pushed to Main Branch ###
    - name : Publish version
      uses: fjogeleit/http-request-action@v1
      id: swaggereq
      with:
        url: 'https://${{env.swaggerhub_host}}/apis/${{env.organization}}/${{ steps.name.outputs.version}}/${{ steps.vars.outputs.version }}/settings/lifecycle?force=true'
        data: '{"published": true}'
        method: 'PUT'
        bearerToken: '${{env.token_id}}'
      if: github.ref == 'refs/heads/main'
    - name: Swaggerresponse
      run: echo ${{ steps.swaggereq.outputs.response }}
    - name: Setup AWS SAM CLI
      # You may pin to the exact commit or the version.
      # uses: aws-actions/setup-sam@8cbdb0241613f319ffe1c1b9f9d8f54ce772b5d3
      uses: aws-actions/setup-sam@v2
      with:
        # The AWS SAM CLI version to install
        version: v2
        # The Python interpreter to use for AWS SAM CLI
        python: 3.0
  build-deploy:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-python@v2
        - uses: aws-actions/setup-sam@v1
        - uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: AKIA6OZ577OXFUZJ3UXI
            aws-secret-access-key: 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
            aws-region: us-east
        # sam build 
        - run: aws apigatewayv2 import-api \    --body file://api-definition.yaml
